# Methodology

```{r setup, file = "R/chapter_start.R", include = FALSE}
# a number of commands need to run at the beginning of each chapter. This
# includes loading libraries that I always use, as well as options for 
# displaying numbers and text.
library(ggspatial)
library(sf)
```

```{r setup2, include = FALSE}
# Other packages ------
# These are packages that get used in this chapter but aren't part of the default set.
library(mlogit)
```

This chapter describes the methodology designed by the research team to evaluate the effectiveness, durability, and stability of TPRS systems on high-speed roadways in Utah. The experiment will observe driver behavior and TPRS displacement under traffic load. Cameras and Wavetronix units will be used to collect the desired data. The designed experiment will observe the results that occur in the absence of TPRS and in layouts that vary the spacing between the individual strips in arrays. The experiment will be designed to maximize observation time and minimize how often contractors will need to adjust the TPRS. Work sites were selected for observation based on traffic volume, availability, and location.

## Layouts

The team designed layouts to test the effectiveness of TPRS at work sites. These layouts were set up at the arrays of TPRS positioned in front of each work site preceding the tapering line of cones that marked the beginning of the work zone. Each layout consisted of two Wavetronix radar detectors and two countCAM4 cameras from StreetLogic Pro. These devices were mounted on trailers and tripods stationed on the side of the road. The layouts are depicted below, showing the set-ups designed for both single-lane and passing-lane configurations.

![](MethodologydiagramPassingLaneClosure-4.svg){fig-align="center" width="672"}

![](MethodologydiagramPassingLaneClosure-5.svg){fig-align="center" width="672"}

![](MethodologydiagramPassingLaneClosure-6.svg){fig-align="center" width="681"}

The research team primarily focused on testing the space between individual TPRS to observe its effect on driver speed and behavior. They also examined whether the strips could remain in place without requiring frequent readjustments. The team developed a spacing system for contractors to use during observation days, tailored to the posted speed limit at each site. The different spacing specifications were derived from current UDOT standards for TPRS spacing and general recommendations from Plastic Safety Systems (PSS) for their RoadQuake TPRS system.

![](SpacingFigure.svg){fig-align="center" width="560"}

## Site Selection

The team selected work sites available during the summer of 2025 based on their driving distance from Provo. The research team used 2023 AADT data to estimate how many vehicles typically traveled on each road segment associated with a work site being considered for observation. This estimate ensured that the roads chosen for observation had enough traffic to support a reliable statistical analysis of the potential effect spacing would have on TPRS arrays.

## Data

The research team used histograms of AADT on Utah roads to determine which ones would make reliable sites to study to ensure statistical significance.

Discuss where you got your data, how you cleaned it, and any assumptions you made. In this example, we get the `Car` dataset from the `mlogit` [@mlogit] package[^03_methods-1] and massage it to be in the format needed for `mlogit`.

[^03_methods-1]: You can often get a well-formatted citation for an R package by typing `citation(package = "packagename")` in the console.

```{r load_data}
tar_load(car_mlogit)
```

Often there will be a table describing summary statistics of your dataset. @tbl-summary shows a nice table using the [`datasummary`](https://vincentarelbundock.github.io/modelsummary/articles/datasummary.html) functions in the `modelsummary` package [@modelsummary].

```{r datasummary}
#| label: tbl-summary
#| tbl-cap: Descriptive Statistics of Dataset
datasummary_balance(
  ~type, 
  data = car_mlogit %>% 
    select(type, fuel, price, range, size), 
  dinm = FALSE
) %>%
  kableExtra::kable_styling(latex_options="scale_down")
```

## Models

If your work is mostly a new model, you probably will have introduced some details in the literature review. But this is where you describe the mathematical construction of your model, the variables it uses, and other things. Some methods are so common (linear regression) that it is unnecessary to explore them in detail. But others will need to be described, often with mathematics. For example, the probability of an alternative $i$ in the a multinomial logit model is

$$
P_i(X_{in}) = \frac{e^{X_{in}\beta_i}}{\sum_{j \in J}e^{X_{jn}\beta_j}}
$$ {#eq-mnl}

Use [LaTeX mathematics](https://www.overleaf.com/learn/latex/mathematical_expressions). You'll want to number display equations so that you can refer to them later in the manuscript. Other simpler math can be described inline, like saying that $i, j \in J$. Details on using equations in Quarto are available [here](https://quarto.org/docs/visual-editor/technical.html#equations).

You can also refer back to numbered equations, like the probability of an MNL presented in @eq-mnl.


```{r}
#| label: fig-map
#| fig-cap: Map of sites
library(ggspatial)
library(sf)
utah <- tigris::states() |> filter(STUSPS == "UT")
sites <- read_sf("data/sites.geojson")
ggplot() + 
  annotation_map_tile("osm", zoom = 8) + 
  ggspatial::annotation_north_arrow(style = ggspatial::north_arrow_minimal, 
  location = "tr") + ggspatial::annotation_scale(location = "br") +
  geom_sf(data = utah, fill = NA, color = "black") +
  geom_sf_text(data = sites, aes(label = site), color = "red", size = 10) +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title = element_blank())

```


```{r}
#| label: tbl-sites
#| tbl-cap: Data Collection Sites
#| 
library(kableExtra)
sites |>
  as_tibble() |>
  select(site, Roadway, Location, Start, End) |>
  sf::st_drop_geometry() |>
  kbl(booktabs = "true", format = "markdown" ) |> kable_styling()
```
